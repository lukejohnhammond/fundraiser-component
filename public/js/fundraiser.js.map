{"version":3,"sources":["fundraiser.js"],"names":["initFundraiser","componentId","totalValue","fundraiser","component","document","getElementById","progressValue","progressPercentage","setTargetValue","targetValue","innerHTML","calcProgress","currentVal","progress","style","width","progressText","buttons","querySelectorAll","setTimeout","forEach","item","addEventListener","e","preventDefault","parseInt","value"],"mappings":"aAAA,QAASA,eAAT,CAAwBC,WAAxB,CAAqCC,UAArC,CAAiD,gBAC/C,GAAMC,YAAa,CACjBC,UAAWC,SAASC,cAAT,CAAwBL,WAAxB,CADM,CAEjBM,cAAe,EAFE,CAGjBL,WAAYA,UAHK,CAIjBM,mBAAoB,CAJH,CAKjBC,eAAgB,yBAAM,CACpB,MAAKC,WAAL,CAAiBC,SAAjB,CAA6B,SAAW,MAAKT,UAA7C,CACD,CAPgB,CAQjB;AACAU,aAAc,sBAACC,UAAD,CAAgB,CAC5BV,WAAWK,kBAAX,CAAiCK,WAAaV,WAAWD,UAAzB,CAAuC,GAAvE,CACAC,WAAWW,QAAX,CAAoBC,KAApB,CAA0BC,KAA1B,CAAkCb,WAAWK,kBAAX,CAAgC,GAAlE,CACA,GAAGK,aAAeV,WAAWD,UAA7B,CAAwC,CACtCC,WAAWc,YAAX,CAAwBN,SAAxB,CAAoC,iDAApC,CACD,CAFD,IAEO,IAAGE,WAAaV,WAAWD,UAA3B,CAAuC,CAC5CC,WAAWc,YAAX,CAAwBN,SAAxB,CAAoC,oCAAsC,CAACR,WAAWD,UAAX,CAAwBW,UAAzB,EAAqC,CAAC,CAA5E,CAAgF,oBAApH,CACD,CAFM,IAEA,CACLV,WAAWc,YAAX,CAAwBN,SAAxB,CAAoC,oBAAsBR,WAAWD,UAAX,CAAwBW,UAA9C,EAA4D,wBAAhG,CACD,CACF,CAnBgB,CAAnB,CAsBA;AACAV,WAAWe,OAAX,CAAqBf,WAAWC,SAAX,CAAqBe,gBAArB,CAAsC,QAAtC,CAArB,CACAhB,WAAWW,QAAX,CAAsBX,WAAWC,SAAX,CAAqBe,gBAArB,CAAsC,gBAAtC,EAAwD,CAAxD,CAAtB,CACAhB,WAAWc,YAAX,CAA0Bd,WAAWC,SAAX,CAAqBe,gBAArB,CAAsC,UAAtC,EAAkD,CAAlD,CAA1B,CACAhB,WAAWO,WAAX,CAAyBP,WAAWC,SAAX,CAAqBe,gBAArB,CAAsC,qBAAtC,EAA6D,CAA7D,CAAzB,CAEA;AACAC,WAAW,UAAM,CACfjB,WAAWS,YAAX,CAAwBT,WAAWI,aAAnC,EACD,CAFD,CAEG,GAFH,EAIA;AACAJ,WAAWe,OAAX,CAAmBG,OAAnB,CAA2B,SAACC,IAAD,CAAU,CACnCA,KAAKC,gBAAL,CAAsB,OAAtB,CAA+B,SAACC,CAAD,CAAO,CACpCA,EAAEC,cAAF,GACAtB,WAAWI,aAAX,EAA4BmB,SAASJ,KAAKK,KAAd,CAA5B,CACAxB,WAAWS,YAAX,CAAwBT,WAAWI,aAAnC,EACD,CAJD,EAKD,CAND,EAOD,CAEDF,SAASkB,gBAAT,CAA0B,kBAA1B,CAA8C,UAAM,CAClDvB,eAAe,aAAf,CAA8B,GAA9B,EACD,CAFD","file":"fundraiser.js","sourcesContent":["function initFundraiser(componentId, totalValue) {\n  const fundraiser = {\n    component: document.getElementById(componentId),\n    progressValue: 50,\n    totalValue: totalValue,\n    progressPercentage: 0,\n    setTargetValue: () => {\n      this.targetValue.innerHTML = '&pound' + this.totalValue;\n    },\n    // work out new percentage and apply css\n    calcProgress: (currentVal) => {\n      fundraiser.progressPercentage = (currentVal / fundraiser.totalValue) * 100;\n      fundraiser.progress.style.width = fundraiser.progressPercentage + '%';\n      if(currentVal === fundraiser.totalValue){\n        fundraiser.progressText.innerHTML = 'Congratulations!! You have reached your target!';\n      } else if(currentVal > fundraiser.totalValue) {\n        fundraiser.progressText.innerHTML = 'Congratulations!! You are &pound;' + (fundraiser.totalValue - currentVal)*-1 + ' over your target!';\n      } else {\n        fundraiser.progressText.innerHTML = 'You need &pound;' + (fundraiser.totalValue - currentVal) + ' to reach your target!';\n      }\n    }\n  };\n\n  // Populate additional DOM elems\n  fundraiser.buttons = fundraiser.component.querySelectorAll('button');\n  fundraiser.progress = fundraiser.component.querySelectorAll('.slider .value')[0];\n  fundraiser.progressText = fundraiser.component.querySelectorAll('.message')[0];\n  fundraiser.targetValue = fundraiser.component.querySelectorAll('.targetValue .value')[0];\n\n  // delay initial load\n  setTimeout(() => {\n    fundraiser.calcProgress(fundraiser.progressValue);\n  }, 500);\n\n  // init event listeners\n  fundraiser.buttons.forEach((item) => {\n    item.addEventListener('click', (e) => {\n      e.preventDefault();\n      fundraiser.progressValue += parseInt(item.value);\n      fundraiser.calcProgress(fundraiser.progressValue);\n    });\n  });\n}\n\ndocument.addEventListener('DOMContentLoaded', () => {\n  initFundraiser('component_1', 100);\n});\n"]}